name: 🤖 Issue & PR Management

on:
  issues:
    types: [opened, edited, closed, reopened]
  pull_request:
    types: [opened, edited, closed, reopened, ready_for_review]
  pull_request_review:
    types: [submitted]
  schedule:
    # Run every day at midnight UTC to clean up stale issues
    - cron: '0 0 * * *'

permissions:
  issues: write
  pull-requests: write
  contents: read

jobs:
  # 🏷️ Auto-label issues and PRs
  auto-label:
    name: 🏷️ Auto Label
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    
    steps:
      - name: 🏷️ Label new issues
        if: github.event_name == 'issues'
        uses: actions/github-script@v7
        with:
          script: |
            const { issue } = context.payload;
            const title = issue.title.toLowerCase();
            const body = issue.body?.toLowerCase() || '';
            
            const labels = [];
            
            // Auto-label based on title/content
            if (title.includes('bug') || title.includes('error') || title.includes('broken')) {
              labels.push('🐛 bug');
            }
            
            if (title.includes('feature') || title.includes('enhancement') || body.includes('feature request')) {
              labels.push('✨ enhancement');
            }
            
            if (title.includes('doc') || title.includes('readme') || body.includes('documentation')) {
              labels.push('📚 documentation');
            }
            
            if (title.includes('question') || title.includes('help') || title.includes('how to')) {
              labels.push('❓ question');
            }
            
            if (title.includes('performance') || body.includes('slow') || body.includes('optimization')) {
              labels.push('⚡ performance');
            }
            
            if (title.includes('security') || body.includes('vulnerability')) {
              labels.push('🔒 security');
            }
            
            // Add priority labels based on keywords
            if (title.includes('urgent') || title.includes('critical') || body.includes('production')) {
              labels.push('🔥 high priority');
            }
            
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: labels
              });
              
              console.log(`Added labels: ${labels.join(', ')}`);
            }

      - name: 🏷️ Label new pull requests
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { pull_request } = context.payload;
            const title = pull_request.title.toLowerCase();
            const body = pull_request.body?.toLowerCase() || '';
            
            const labels = [];
            
            // Auto-label based on PR title/content
            if (title.includes('fix') || title.includes('bug')) {
              labels.push('🐛 bug fix');
            }
            
            if (title.includes('feat') || title.includes('feature') || title.includes('add')) {
              labels.push('✨ feature');
            }
            
            if (title.includes('docs') || title.includes('readme')) {
              labels.push('📚 documentation');
            }
            
            if (title.includes('refactor') || title.includes('cleanup')) {
              labels.push('♻️ refactor');
            }
            
            if (title.includes('test') || title.includes('spec')) {
              labels.push('🧪 tests');
            }
            
            if (title.includes('deps') || title.includes('dependencies') || title.includes('update')) {
              labels.push('📦 dependencies');
            }
            
            if (title.includes('breaking') || body.includes('breaking change')) {
              labels.push('💥 breaking change');
            }
            
            // Check if it's a draft
            if (pull_request.draft) {
              labels.push('🚧 work in progress');
            }
            
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pull_request.number,
                labels: labels
              });
              
              console.log(`Added labels: ${labels.join(', ')}`);
            }

  # 👋 Welcome new contributors
  welcome:
    name: 👋 Welcome Contributors
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    
    steps:
      - name: 👋 Welcome new issue creators
        if: github.event_name == 'issues'
        uses: actions/github-script@v7
        with:
          script: |
            // Check if this is the user's first issue
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              creator: context.payload.issue.user.login,
              state: 'all'
            });
            
            if (issues.length === 1) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                body: `## 👋 Welcome to PromptBoost!
                
Thanks for opening your first issue! We're excited to have you as part of our community.

### 📋 What happens next?
1. Our maintainers will review your issue
2. If it's a bug, we'll try to reproduce it
3. If it's a feature request, we'll discuss feasibility
4. We'll update you with any questions or progress

### 🤝 Ways to contribute
- 🐛 Report bugs and issues
- 💡 Suggest new features
- 📚 Improve documentation
- 🧪 Write tests
- 💻 Submit pull requests

### 📚 Helpful links
- [Contributing Guide](https://github.com/${context.repo.owner}/${context.repo.repo}#contributing)
- [Code of Conduct](https://github.com/${context.repo.owner}/${context.repo.repo}/blob/main/CODE_OF_CONDUCT.md)
- [Documentation](https://github.com/${context.repo.owner}/${context.repo.repo}#readme)

Thanks again for contributing! 🚀`
              });
            }

      - name: 👋 Welcome new contributors
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            // Check if this is the user's first PR
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              creator: context.payload.pull_request.user.login,
              state: 'all'
            });
            
            if (prs.length === 1) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: `## 🎉 First Pull Request!

Thank you for your first contribution to PromptBoost! 

### ✅ PR Checklist
Please make sure your PR:
- [ ] Follows our coding standards
- [ ] Includes tests for new functionality
- [ ] Updates documentation if needed
- [ ] Has a clear, descriptive title
- [ ] Explains what changes were made and why

### 🔍 Review Process
- Our maintainers will review your code
- We might suggest some changes
- Once approved, we'll merge your PR
- You'll become a contributor! 🎊

### 🆘 Need Help?
If you need any assistance, feel free to:
- Comment on this PR with questions
- Check our [Contributing Guide](https://github.com/${context.repo.owner}/${context.repo.repo}#contributing)
- Reach out in [Discussions](https://github.com/${context.repo.owner}/${context.repo.repo}/discussions)

Thanks for making PromptBoost better! 🚀`
              });
            }

  # 🧹 Cleanup stale issues and PRs
  cleanup:
    name: 🧹 Cleanup Stale Items
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
      - name: 🧹 Mark stale issues and PRs
        uses: actions/stale@v8
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          stale-issue-message: |
            ## 😴 This issue has been marked as stale
            
            This issue has been automatically marked as stale because it has not had recent activity. 
            
            ### 🔄 What happens next?
            - If no activity occurs within 7 days, this issue will be automatically closed
            - To keep it open, just add a comment or remove the stale label
            - If you're still experiencing this issue, please let us know!
            
            Thank you for your contributions! 🙏
          stale-pr-message: |
            ## 😴 This pull request has been marked as stale
            
            This PR has been automatically marked as stale because it has not had recent activity.
            
            ### 🔄 What happens next?
            - If no activity occurs within 7 days, this PR will be automatically closed
            - To keep it open, just add a comment or remove the stale label
            - Consider rebasing if there are conflicts
            
            Thank you for your contribution! 🙏
          close-issue-message: |
            ## 🔒 Issue Closed
            
            This issue was automatically closed due to lack of activity. 
            
            If you're still experiencing this problem, please feel free to reopen this issue or create a new one.
          close-pr-message: |
            ## 🔒 Pull Request Closed
            
            This PR was automatically closed due to lack of activity.
            
            If you'd like to continue working on this, please feel free to reopen or create a new PR.
          days-before-stale: 30
          days-before-close: 7
          stale-issue-label: '😴 stale'
          stale-pr-label: '😴 stale'
          exempt-issue-labels: '📌 pinned,🔒 security,🔥 high priority'
          exempt-pr-labels: '📌 pinned,🔒 security,🔥 high priority'
          operations-per-run: 100

  # 📊 Generate project metrics
  metrics:
    name: 📊 Project Metrics
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
      - name: 📊 Update project metrics
        uses: actions/github-script@v7
        with:
          script: |
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });
            
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });
            
            const bugIssues = issues.filter(issue => 
              issue.labels.some(label => label.name.includes('bug'))
            ).length;
            
            const featureRequests = issues.filter(issue => 
              issue.labels.some(label => label.name.includes('enhancement'))
            ).length;
            
            console.log(`📊 Project Status:`);
            console.log(`- Open Issues: ${issues.length}`);
            console.log(`- Open PRs: ${prs.length}`);
            console.log(`- Bug Reports: ${bugIssues}`);
            console.log(`- Feature Requests: ${featureRequests}`);
            
            // You could extend this to create issues with metrics reports
            // or update a project dashboard
